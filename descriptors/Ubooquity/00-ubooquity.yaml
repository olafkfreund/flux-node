---
# Source: ubooquity/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zak-ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
    helm.sh/chart: ubooquity-0.1.0
    app.kubernetes.io/instance: zak
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: ubooquity/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zak-ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
    helm.sh/chart: ubooquity-0.1.0
    app.kubernetes.io/instance: zak
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  preferences.json: |
    {"adminPortNumber":2203,"autoScanAtLaunch":true,"autoscanPeriod":0,"bookHeight":230,"bookWidth":160,"bookmarkUsingCookies":false,"booksPaginationNumber":30,"booksPaths":[{"pathString":"/books","userName":[]}],"bypassSingleRootFolder":false,"comicHeight":230,"comicWidth":160,"comicsPaginationNumber":30,"comicsPaths":[{"pathString":"/comics","userName":[]}],"displayTitleInsteadOfFileName":false,"enableFolderMetadataDisplay":false,"filesPaths":[{"pathString":"/files","userName":[]}],"folderExclusionPattern":"","isBooksProviderEnabled":true,"isComicsProviderEnabled":true,"isFilesProviderEnabled":true,"isOpdsProviderEnabled":false,"isRemoteAdminEnabled":false,"isShrinkingCacheEnabled":false,"isUserManagementEnabled":false,"keepUnreachableSharedFolders":false,"keystorePassword":"","keystorePath":"","libraryPortNumber":2202,"minimizeOnStartup":false,"minimizeToTray":false,"reverseProxyPrefix":"","shrinkingCachePath":"","shrunkPageHeight":2500,"shrunkPageWidth":1536,"theme":"default","users":[]}
---
# Source: ubooquity/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zak-ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
    helm.sh/chart: ubooquity-0.1.0
    app.kubernetes.io/instance: zak
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2202
      targetPort: http
      protocol: TCP
      name: http
    - port: 2203
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: ubooquity
    app.kubernetes.io/instance: zak
---
# Source: ubooquity/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zak-ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
    helm.sh/chart: ubooquity-0.1.0
    app.kubernetes.io/instance: zak
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubooquity
      app.kubernetes.io/instance: zak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubooquity
        app.kubernetes.io/instance: zak
    spec:
      serviceAccountName: zak-ubooquity
      securityContext:
        {}
      containers:
        - name: ubooquity
          securityContext:
            {}
          image: "linuxserver/ubooquity:2.1.2-ls36"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - { name: PUID, value: "1001" }
            - { name: GUID, value: "1001"}
            - { name: TZ, value: "Europe/London" }
            - { name: MAXMEM, value: "1024" }
          volumeMounts:
            - mountPath: /config
              name: media-volume
              subPath: /configs/ubooquity
            - mountPath: /comics
              name: media-volume
              subPath: /library/manga
            - mountPath: /config/preferences.json
              name: media-volume
              subPath: preferences.json
      volumes:
        - name: media-volume
          persistentVolumeClaim:
            claimName: media-volume
---
# Source: ubooquity/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "zak-ubooquity-test-connection"
  labels:
    app.kubernetes.io/name: ubooquity
    helm.sh/chart: ubooquity-0.1.0
    app.kubernetes.io/instance: zak
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['zak-ubooquity:2202']
  restartPolicy: Never
