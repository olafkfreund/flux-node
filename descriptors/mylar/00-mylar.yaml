---
# Source: mylar/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mylar
  labels:
    helm.sh/chart: mylar
    app.kubernetes.io/name: mylar
    app.kubernetes.io/instance: k3s
    app.kubernetes.io/version: "arm"
    app.kubernetes.io/managed-by: Helm
---
# Source: mylar/templates/env-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mylar-env-config
  labels:
    helm.sh/chart: mylar
    app.kubernetes.io/name: mylar
    app.kubernetes.io/instance: k3s
    app.kubernetes.io/version: "arm"
    app.kubernetes.io/managed-by: Helm
data:
  PGID: "1001"
  PUID: "1001"
  TZ: "Europe/London"
  UMASK_SET: "18"
---

# Source: mylar/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mylar
  labels:
    helm.sh/chart: mylar
    app.kubernetes.io/name: mylar
    app.kubernetes.io/instance: k3s
    app.kubernetes.io/version: "arm"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8090
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: mylar
    app.kubernetes.io/instance: k3s
---
# Source: mylar/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mylar
  labels:
    helm.sh/chart: mylar
    app.kubernetes.io/name: mylar
    app.kubernetes.io/instance: k3s
    app.kubernetes.io/version: "arm"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mylar
      app.kubernetes.io/instance: k3s
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mylar
        app.kubernetes.io/instance: k3s
    spec:
      serviceAccountName: mylar
      securityContext:
        {}
      containers:
        - name: mylar
          securityContext:
            {}
          image: "linuxserver/mylar:arm32v7-latest"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: mylar-env-config
          ports:
            - name: http
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 60
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: /config
              name: media-volume
              subPath: configs/mylar
            - mountPath: /downloads
              name: media-volume
              subPath: library/manga
            - mountPath: /incoming
              name: media-volume
              subPath: downloads/manga
            - mountPath: /comics
              name: media-volume
          resources:
            {}
      volumes:
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-volume