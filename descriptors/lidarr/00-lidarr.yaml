# Source: lidarr/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: music-lidarr
  labels:
    app.kubernetes.io/name: lidarr
    helm.sh/chart: lidarr-1.0.1
    app.kubernetes.io/instance: music
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8686
      protocol: TCP
      targetPort: http

  selector:
    app.kubernetes.io/name: lidarr
    app.kubernetes.io/instance: music
---
# Source: lidarr/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-lidarr
  labels:
    app.kubernetes.io/name: lidarr
    helm.sh/chart: lidarr-1.0.1
    app.kubernetes.io/instance: music
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: lidarr
      app.kubernetes.io/instance: music
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lidarr
        app.kubernetes.io/instance: music
    spec:
      containers:
        - name: lidarr
          image: "linuxserver/lidarr:0.7.1.1381-ls7"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8686
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: TZ
              value: "Europe/London"
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
          volumeMounts:
            - mountPath: /config
              name: media-volume
              subPath: configs/lidarr
            - mountPath: /downloads
              name: media-volume
              subPath: downloads
            - mountPath: /music
              name: media-volume
              subPath: downloads/music
          resources:
            {}
      volumes:
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-volume